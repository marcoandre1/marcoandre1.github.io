{"version":3,"sources":["server/defaultState.js","store/index.js","images/profile.png","components/TaskList.jsx","components/Dashboard.jsx","components/MobileMenuButton.jsx","components/DarkModeButton.jsx","components/Navigation.jsx","components/Footer.jsx","App.js","serviceWorker.js","index.js"],"names":["defaultState","users","id","name","groups","owner","tasks","group","isComplete","comments","task","content","languages","htmlTitle","title","description","pageNotFound","store","createStore","state","ConnectedTaskList","connect","className","src","profile","alt","ConnectedDashboard","ownProps","undefined","match","params","language","find","notFound","Helmet","key","MobileMenuButton","isMenuOpen","onMobileMenuClick","onClick","aria-expanded","fill","stroke","viewBox","xmlns","aria-hidden","strokeLinecap","strokeLinejoin","strokeWidth","d","DarkModeButton","isDarkMode","onDarkModeToggle","role","aria-checked","tabIndex","ConnectedNavigation","map","to","ConnectedFooter","App","bind","this","setInitialDarkMode","localStorage","theme","window","matchMedia","matches","document","querySelector","classList","add","remove","setDarkMode","setState","contains","exact","path","render","Component","Boolean","location","hostname","rootElement","getElementById","hasChildNodes","hydrate","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.42ee328b.chunk.js","sourcesContent":["export const defaultState = {\n  users: [\n    {\n      id: \"U1\",\n      name: \"Dev\",\n    },\n    {\n      id: \"U2\",\n      name: \"C. Eeyo\",\n    },\n  ],\n  groups: [\n    {\n      name: \"To Do\",\n      id: \"G1\",\n      owner: \"U1\",\n    },\n    {\n      name: \"Doing\",\n      id: \"G2\",\n      owner: \"U1\",\n    },\n    {\n      name: \"Done\",\n      id: \"G3\",\n      owner: \"U1\",\n    },\n  ],\n  tasks: [\n    {\n      name: \"Refactor tests\",\n      id: \"T1\",\n      group: \"G1\",\n      owner: \"U1\",\n      isComplete: false,\n    },\n    {\n      name: \"Meet with CTO\",\n      id: \"T2\",\n      group: \"G1\",\n      owner: \"U1\",\n      isComplete: true,\n    },\n    {\n      name: \"Compile ES6\",\n      id: \"T3\",\n      group: \"G2\",\n      owner: \"U2\",\n      isComplete: false,\n    },\n    {\n      name: \"Update component snapshots\",\n      id: \"T4\",\n      group: \"G2\",\n      owner: \"U1\",\n      isComplete: true,\n    },\n    {\n      name: \"Production optimizations\",\n      id: \"T5\",\n      group: \"G3\",\n      owner: \"U1\",\n      isComplete: false,\n    },\n  ],\n  comments: [\n    {\n      owner: \"U1\",\n      id: \"C1\",\n      task: \"T1\",\n      content: \"Great work!\",\n    },\n  ],\n  languages: [\n    {\n      id: \"en\",\n      htmlTitle: \"modokemdev - en\",\n      name: \"English\",\n      title: \"Welcome to Modokemdev\",\n      description: \"C# developer at day, Dragon Rider at night.\",\n    },\n    {\n      id: \"fr\",\n      htmlTitle: \"modokemdev - fr\",\n      name: \"Français\",\n      title: \"Bienvenue à Modokemdev\",\n      description: \"Développeur C# le jour, Dragon Rider la nuit.\",\n    },\n    {\n      id: \"es\",\n      htmlTitle: \"modokemdev - es\",\n      name: \"Español\",\n      title: \"Bienvenido a Modokemdev\",\n      description: \"Desarollador C# de día, Dragon Rider de noche.\",\n    },\n  ],\n  pageNotFound: [\n    {\n      id: 404,\n      htmlTitle: \"404 - Page not found\",\n      name: \"Page not found\",\n      title: \"404 - Page not found\",\n      description: \"You are lost!\",\n    },\n  ],\n};\n","import { createStore } from 'redux';\r\nimport { defaultState } from '../server/defaultState';\r\n\r\nexport const store = createStore(\r\n    function reducer (state = defaultState, action) {\r\n        return state;\r\n    }\r\n);","export default __webpack_public_path__ + \"static/media/profile.c8178ecc.png\";","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport profile from \"../images/profile.png\";\r\n\r\nexport const TaskList = ({ name, description }) => (\r\n  <div className=\"component-highlight max-w-sm rounded overflow-hidden shadow-lg items-center\">\r\n    <img className=\"w-full\" src={profile} alt=\"Profile\" />\r\n    <div className=\"px-6 py-4\">\r\n      <div className=\"font-bold text-xl text-gray-600 dark:text-gray-300 mb-2\">\r\n        {name}\r\n      </div>\r\n      <p className=\"text-gray-700 dark:text-gray-400 text-base\">\r\n        {description}\r\n      </p>\r\n    </div>\r\n    <div className=\"px-6 pt-4 pb-2\">\r\n      <span className=\"component-sub-highlight inline-block bg-gray-200 rounded-full px-3 py-1 text-sm font-semibold text-gray-700 mr-2 mb-2\">\r\n        #photography\r\n      </span>\r\n      <span className=\"component-sub-highlight inline-block bg-gray-200 rounded-full px-3 py-1 text-sm font-semibold text-gray-700 mr-2 mb-2\">\r\n        #travel\r\n      </span>\r\n      <span className=\"component-sub-highlight inline-block bg-gray-200 rounded-full px-3 py-1 text-sm font-semibold text-gray-700 mr-2 mb-2\">\r\n        #winter\r\n      </span>\r\n      <div className=\"px-6 py-4 component-sub-highlight \">\r\n        <button className=\"btn-blue\">Subscribe</button>\r\n      </div>\r\n    </div>\r\n  </div>\r\n);\r\n\r\nexport const ConnectedTaskList = connect((state) => state)(TaskList);\r\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { ConnectedTaskList } from \"./TaskList\";\nimport { Helmet } from \"react-helmet\";\n\nexport const Dashboard = ({ language }) => (\n  <div>\n    <Helmet>\n      <title>{language.htmlTitle}</title>\n    </Helmet>\n    <h2 className=\"font-bold text-xl text-gray-900 dark:text-white mb-2 mt-2 px-6\">\n      {language.title}\n    </h2>\n    <ConnectedTaskList\n      key={language.id}\n      id={language.id}\n      name={language.name}\n      description={language.description}\n    />\n  </div>\n);\n\nfunction mapStateToProps(state, ownProps) {\n  let id = ownProps.match === undefined ? \"en\" : ownProps.match.params.id;\n  let language = state.languages.find((language) => language.id === id);\n\n  if (language === undefined) {\n    id = 404;\n    language = state.pageNotFound.find((notFound) => notFound.id === id);\n  }\n\n  return {\n    id,\n    language,\n  };\n}\n\nexport const ConnectedDashboard = connect(mapStateToProps)(Dashboard);\n","import React from \"react\";\r\n\r\nconst MobileMenuButton = ({ isMenuOpen, onMobileMenuClick }) => {\r\n  return (\r\n    <div className=\"absolute inset-y-0 left-0 flex items-center sm:hidden\">\r\n      <button\r\n        onClick={onMobileMenuClick}\r\n        className=\"inline-flex items-center justify-center p-2 rounded-md text-gray-400 hover:text-white hover:bg-gray-700 focus:outline-none focus:ring-2 focus:ring-inset focus:ring-white\"\r\n        aria-expanded=\"false\"\r\n      >\r\n        <span className=\"sr-only\">Open main menu</span>\r\n        <svg\r\n          className={`${isMenuOpen ? \"hidden\" : \"block\"} w-6 h-6`}\r\n          fill=\"none\"\r\n          stroke=\"currentColor\"\r\n          viewBox=\"0 0 24 24\"\r\n          xmlns=\"http://www.w3.org/2000/svg\"\r\n          aria-hidden=\"true\"\r\n        >\r\n          <path\r\n            strokeLinecap=\"round\"\r\n            strokeLinejoin=\"round\"\r\n            strokeWidth={2}\r\n            d=\"M4 6h16M4 12h16M4 18h16\"\r\n          />\r\n        </svg>\r\n        <svg\r\n          className={`${isMenuOpen ? \"block\" : \"hidden\"} w-6 h-6`}\r\n          fill=\"none\"\r\n          stroke=\"currentColor\"\r\n          viewBox=\"0 0 24 24\"\r\n          xmlns=\"http://www.w3.org/2000/svg\"\r\n          aria-hidden=\"true\"\r\n        >\r\n          <path\r\n            strokeLinecap=\"round\"\r\n            strokeLinejoin=\"round\"\r\n            strokeWidth={2}\r\n            d=\"M6 18L18 6M6 6l12 12\"\r\n          />\r\n        </svg>\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MobileMenuButton;\r\n","import React from \"react\";\r\n\r\nconst DarkModeButton = ({ isDarkMode, onDarkModeToggle }) => {\r\n  return (\r\n    <span\r\n      role=\"checkbox\"\r\n      aria-checked={isDarkMode}\r\n      tabIndex=\"0\"\r\n      onClick={onDarkModeToggle}\r\n      className={`${\r\n        isDarkMode ? \"bg-indigo-600\" : \"bg-gray-500\"\r\n      } relative inline-block flex-shrink-0 h-6 w-11 border-2 border-transparent rounded-full cursor-pointer transition-colors ease-in-out duration-200 focus:outline-none focus:shadow-outline`}\r\n    >\r\n      <span\r\n        aria-hidden=\"true\"\r\n        className={`${\r\n          isDarkMode ? \"translate-x-5\" : \"translate-x-0\"\r\n        } inline-block h-5 w-5 rounded-full bg-white shadow transform transition ease-in-out duration-200`}\r\n      ></span>\r\n    </span>\r\n  );\r\n};\r\n\r\nexport default DarkModeButton;\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport MobileMenuButton from \"./MobileMenuButton\";\r\nimport DarkModeButton from \"./DarkModeButton\";\r\n\r\nconst Navigation = ({\r\n  languages,\r\n  isMenuOpen,\r\n  onMobileMenuClick,\r\n  isDarkMode,\r\n  onDarkModeToggle,\r\n}) => (\r\n  <nav className=\"bg-gray-200 dark:bg-gray-800 rounded-md\">\r\n    <div className=\"max-w-7xl mx-auto px-2 sm:px-6 lg:px-8\">\r\n      <div className=\"relative flex items-center justify-between h-16\">\r\n        <MobileMenuButton\r\n          isMenuOpen={isMenuOpen}\r\n          onMobileMenuClick={onMobileMenuClick}\r\n        />\r\n        <div className=\"flex-1 flex items-center justify-center sm:items-stretch sm:justify-start\">\r\n          <div className=\"flex-shrink-0 flex items-center\">\r\n            <img\r\n              className=\"block lg:hidden h-8 w-auto\"\r\n              src=\"https://tailwindui.com/img/logos/workflow-mark-indigo-500.svg\"\r\n              alt=\"Workflow\"\r\n            />\r\n            <img\r\n              className=\"hidden lg:block h-8 w-auto\"\r\n              src=\"https://tailwindui.com/img/logos/workflow-logo-indigo-500-mark-white-text.svg\"\r\n              alt=\"Workflow\"\r\n            />\r\n          </div>\r\n          <div className=\"hidden sm:block sm:ml-6\">\r\n            <div className=\"flex space-x-4\">\r\n              {languages.map((language) => (\r\n                <Link\r\n                  to={`/${language.id}`}\r\n                  key={language.id}\r\n                  className=\"text-black dark:text-gray-300 hover:text-gray-500 dark:hover:text-white px-3 py-2 rounded-md text-sm font-medium\"\r\n                >\r\n                  {language.name}\r\n                </Link>\r\n              ))}\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"absolute inset-y-0 right-0 flex items-center pr-2 sm:static sm:inset-auto sm:ml-6 sm:pr-0\">\r\n          <DarkModeButton\r\n            isDarkMode={isDarkMode}\r\n            onDarkModeToggle={onDarkModeToggle}\r\n          />\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <div className={`${isMenuOpen ? \"block\" : \"hidden\"} sm:hidden`}>\r\n      <div className=\"px-2 pt-2 pb-3 space-y-1\">\r\n        {languages.map((language) => (\r\n          <Link\r\n            to={`/${language.id}`}\r\n            key={language.id}\r\n            className=\"text-black dark:text-gray-300 hover:text-gray-500 dark:hover:text-white block px-3 py-2 rounded-md text-base font-medium\"\r\n          >\r\n            {language.name}\r\n          </Link>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  </nav>\r\n);\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    languages: state.languages,\r\n  };\r\n}\r\n\r\nexport const ConnectedNavigation = connect(mapStateToProps)(Navigation);\r\n","import { connect } from \"react-redux\";\r\nimport React from \"react\";\r\n\r\nconst Footer = () => (\r\n  <div className=\"bg-gray-200 dark:bg-gray-800 text-black dark:text-gray-300 rounded-md mt-6 p-6\">\r\n    Modokemdev @2020\r\n  </div>\r\n);\r\n\r\nexport const ConnectedFooter = connect((state) => state)(Footer);\r\n","import React, { Component } from \"react\";\nimport { BrowserRouter, Route } from \"react-router-dom\";\nimport { Provider } from \"react-redux\";\nimport { store } from \"./store\";\nimport { ConnectedDashboard } from \"./components/Dashboard\";\nimport { ConnectedNavigation } from \"./components/Navigation\";\nimport { ConnectedFooter } from \"./components/Footer\";\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      isDarkMode: false,\n      isMenuOpen: false,\n    };\n    // Binding method\n    this.onDarkModeToggle = this.onDarkModeToggle.bind(this);\n    this.onMobileMenuClick = this.onMobileMenuClick.bind(this);\n  }\n\n  componentDidMount() {\n    this.setInitialDarkMode();\n  }\n\n  setInitialDarkMode() {\n    if (\n      localStorage.theme === \"dark\" ||\n      (!(\"theme\" in localStorage) &&\n        window.matchMedia(\"(prefers-color-scheme: dark)\").matches)\n    ) {\n      document.querySelector(\"html\").classList.add(\"dark\");\n    } else {\n      document.querySelector(\"html\").classList.remove(\"dark\");\n    }\n    this.setDarkMode();\n  }\n\n  onMobileMenuClick() {\n    this.setState({\n      isMenuOpen: !this.state.isMenuOpen,\n    });\n  }\n\n  onDarkModeToggle() {\n    if (document.querySelector(\"html\").classList.contains(\"dark\")) {\n      document.querySelector(\"html\").classList.remove(\"dark\");\n    } else {\n      document.querySelector(\"html\").classList.add(\"dark\");\n    }\n    this.setDarkMode();\n  }\n\n  setDarkMode() {\n    this.setState({\n      isDarkMode: document.querySelector(\"html\").classList.contains(\"dark\"),\n    });\n  }\n\n  render() {\n    return (\n      <div className=\"bg-white dark:bg-black\">\n        <div className=\"px-4 py-3\">\n          <BrowserRouter>\n            <Provider store={store}>\n              <header>\n                <ConnectedNavigation\n                  isDarkMode={this.state.isDarkMode}\n                  onDarkModeToggle={this.onDarkModeToggle}\n                  isMenuOpen={this.state.isMenuOpen}\n                  onMobileMenuClick={this.onMobileMenuClick}\n                />\n              </header>\n              <main>\n                <Route exact path={`/`} render={() => <ConnectedDashboard />} />\n                <Route\n                  exact\n                  path={`/:id`}\n                  render={({ match }) => <ConnectedDashboard match={match} />}\n                />\n              </main>\n              <ConnectedFooter />\n            </Provider>\n          </BrowserRouter>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from \"react\";\nimport { hydrate, render } from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nconst rootElement = document.getElementById(\"root\");\nif (rootElement.hasChildNodes()) {\n  hydrate(<App />, rootElement);\n} else {\n  render(<App />, rootElement);\n}\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}