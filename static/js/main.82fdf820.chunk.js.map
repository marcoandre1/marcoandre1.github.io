{"version":3,"sources":["server/defaultState.js","store/index.js","images/profile.png","components/TaskList.jsx","components/Dashboard.jsx","components/MobileMenuButton.jsx","components/DarkModeButton.jsx","components/Navigation.jsx","components/Footer.jsx","App.js","serviceWorker.js","index.js"],"names":["defaultState","users","id","name","groups","owner","tasks","group","isComplete","comments","task","content","languages","title","description","store","createStore","state","ConnectedTaskList","connect","className","src","profile","alt","ConnectedDashboard","ownProps","undefined","match","params","language","find","key","MobileMenuButton","isMenuOpen","onMobileMenuClick","onClick","aria-expanded","fill","stroke","viewBox","xmlns","aria-hidden","strokeLinecap","strokeLinejoin","strokeWidth","d","DarkModeButton","isDarkMode","onDarkModeToggle","role","aria-checked","tabIndex","ConnectedNavigation","map","to","ConnectedFooter","localStorage","theme","window","matchMedia","matches","document","querySelector","classList","add","remove","App","contains","bind","this","setState","setDarkMode","exact","path","render","Component","Boolean","location","hostname","ReactDOM","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.82fdf820.chunk.js","sourcesContent":["export const defaultState = {\n  users: [\n    {\n      id: \"U1\",\n      name: \"Dev\",\n    },\n    {\n      id: \"U2\",\n      name: \"C. Eeyo\",\n    },\n  ],\n  groups: [\n    {\n      name: \"To Do\",\n      id: \"G1\",\n      owner: \"U1\",\n    },\n    {\n      name: \"Doing\",\n      id: \"G2\",\n      owner: \"U1\",\n    },\n    {\n      name: \"Done\",\n      id: \"G3\",\n      owner: \"U1\",\n    },\n  ],\n  tasks: [\n    {\n      name: \"Refactor tests\",\n      id: \"T1\",\n      group: \"G1\",\n      owner: \"U1\",\n      isComplete: false,\n    },\n    {\n      name: \"Meet with CTO\",\n      id: \"T2\",\n      group: \"G1\",\n      owner: \"U1\",\n      isComplete: true,\n    },\n    {\n      name: \"Compile ES6\",\n      id: \"T3\",\n      group: \"G2\",\n      owner: \"U2\",\n      isComplete: false,\n    },\n    {\n      name: \"Update component snapshots\",\n      id: \"T4\",\n      group: \"G2\",\n      owner: \"U1\",\n      isComplete: true,\n    },\n    {\n      name: \"Production optimizations\",\n      id: \"T5\",\n      group: \"G3\",\n      owner: \"U1\",\n      isComplete: false,\n    },\n  ],\n  comments: [\n    {\n      owner: \"U1\",\n      id: \"C1\",\n      task: \"T1\",\n      content: \"Great work!\",\n    },\n  ],\n  languages: [\n    {\n      name: \"English\",\n      id: \"en\",\n      title: \"Welcome to Modokemdev\",\n      description: \"C# developer at day, Dragon Rider at night.\",\n    },\n    {\n      name: \"Français\",\n      id: \"fr\",\n      title: \"Bienvenue à Modokemdev\",\n      description: \"Développeur C# le jour, Dragon Rider la nuit.\",\n    },\n    {\n      name: \"Español\",\n      id: \"es\",\n      title: \"Bienvenido a Modokemdev\",\n      description: \"Desarollador C# de día, Dragon Rider de noche.\",\n    },\n  ],\n};\n","import { createStore } from 'redux';\r\nimport { defaultState } from '../server/defaultState';\r\n\r\nexport const store = createStore(\r\n    function reducer (state = defaultState, action) {\r\n        return state;\r\n    }\r\n);","export default __webpack_public_path__ + \"static/media/profile.c8178ecc.png\";","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport profile from \"../images/profile.png\";\n\nexport const TaskList = ({ name, description }) => (\n  <div className=\"component-highlight max-w-sm rounded overflow-hidden shadow-lg items-center\">\n    <img className=\"w-full\" src={profile} alt=\"Profile\" />\n    <div className=\"px-6 py-4\">\n      <div className=\"font-bold text-xl text-gray-600 dark:text-gray-300 mb-2\">\n        {name}\n      </div>\n      <p className=\"text-gray-700 dark:text-gray-400 text-base\">\n        {description}\n      </p>\n    </div>\n    <div className=\"px-6 pt-4 pb-2\">\n      <span className=\"component-sub-highlight inline-block bg-gray-200 rounded-full px-3 py-1 text-sm font-semibold text-gray-700 mr-2 mb-2\">\n        #photography\n      </span>\n      <span className=\"component-sub-highlight inline-block bg-gray-200 rounded-full px-3 py-1 text-sm font-semibold text-gray-700 mr-2 mb-2\">\n        #travel\n      </span>\n      <span className=\"component-sub-highlight inline-block bg-gray-200 rounded-full px-3 py-1 text-sm font-semibold text-gray-700 mr-2 mb-2\">\n        #winter\n      </span>\n      <div className=\"px-6 py-4 component-sub-highlight \">\n        <button className=\"btn-blue\">Subscribe</button>\n      </div>\n    </div>\n  </div>\n);\n\nexport const ConnectedTaskList = connect((state) => state)(TaskList);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { ConnectedTaskList } from \"./TaskList\";\n\nexport const Dashboard = ({ language }) => (\n  <div>\n    <h2 className=\"font-bold text-xl text-gray-900 dark:text-white mb-2 mt-2 px-6\">\n      {language.title}\n    </h2>\n    <ConnectedTaskList\n      key={language.id}\n      id={language.id}\n      name={language.name}\n      description={language.description}\n    />\n  </div>\n);\n\nfunction mapStateToProps(state, ownProps) {\n  let id = ownProps.match === undefined ? \"en\" : ownProps.match.params.id;\n  let language = state.languages.find((language) => language.id === id);\n\n  return {\n    id,\n    language,\n  };\n}\n\nexport const ConnectedDashboard = connect(mapStateToProps)(Dashboard);\n","import React from \"react\";\n\nconst MobileMenuButton = ({ isMenuOpen, onMobileMenuClick }) => {\n  return (\n    <div className=\"absolute inset-y-0 left-0 flex items-center sm:hidden\">\n      <button\n        onClick={onMobileMenuClick}\n        className=\"inline-flex items-center justify-center p-2 rounded-md text-gray-400 hover:text-white hover:bg-gray-700 focus:outline-none focus:ring-2 focus:ring-inset focus:ring-white\"\n        aria-expanded=\"false\"\n      >\n        <span className=\"sr-only\">Open main menu</span>\n        <svg\n          className={`${isMenuOpen ? \"hidden\" : \"block\"} w-6 h-6`}\n          fill=\"none\"\n          stroke=\"currentColor\"\n          viewBox=\"0 0 24 24\"\n          xmlns=\"http://www.w3.org/2000/svg\"\n          aria-hidden=\"true\"\n        >\n          <path\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            strokeWidth={2}\n            d=\"M4 6h16M4 12h16M4 18h16\"\n          />\n        </svg>\n        <svg\n          className={`${isMenuOpen ? \"block\" : \"hidden\"} w-6 h-6`}\n          fill=\"none\"\n          stroke=\"currentColor\"\n          viewBox=\"0 0 24 24\"\n          xmlns=\"http://www.w3.org/2000/svg\"\n          aria-hidden=\"true\"\n        >\n          <path\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            strokeWidth={2}\n            d=\"M6 18L18 6M6 6l12 12\"\n          />\n        </svg>\n      </button>\n    </div>\n  );\n};\n\nexport default MobileMenuButton;\n","import React from \"react\";\n\nconst DarkModeButton = ({ isDarkMode, onDarkModeToggle }) => {\n  return (\n    <span\n      role=\"checkbox\"\n      aria-checked={isDarkMode}\n      tabIndex=\"0\"\n      onClick={onDarkModeToggle}\n      className={`${\n        isDarkMode ? \"bg-indigo-600\" : \"bg-gray-500\"\n      } relative inline-block flex-shrink-0 h-6 w-11 border-2 border-transparent rounded-full cursor-pointer transition-colors ease-in-out duration-200 focus:outline-none focus:shadow-outline`}\n    >\n      <span\n        aria-hidden=\"true\"\n        className={`${\n          isDarkMode ? \"translate-x-5\" : \"translate-x-0\"\n        } inline-block h-5 w-5 rounded-full bg-white shadow transform transition ease-in-out duration-200`}\n      ></span>\n    </span>\n  );\n};\n\nexport default DarkModeButton;\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport MobileMenuButton from \"./MobileMenuButton\";\nimport DarkModeButton from \"./DarkModeButton\";\n\nconst Navigation = ({\n  languages,\n  isMenuOpen,\n  onMobileMenuClick,\n  isDarkMode,\n  onDarkModeToggle,\n}) => (\n  <nav className=\"bg-gray-200 dark:bg-gray-800 rounded-md\">\n    <div className=\"max-w-7xl mx-auto px-2 sm:px-6 lg:px-8\">\n      <div className=\"relative flex items-center justify-between h-16\">\n        <MobileMenuButton\n          isMenuOpen={isMenuOpen}\n          onMobileMenuClick={onMobileMenuClick}\n        />\n        <div className=\"flex-1 flex items-center justify-center sm:items-stretch sm:justify-start\">\n          <div className=\"flex-shrink-0 flex items-center\">\n            <img\n              className=\"block lg:hidden h-8 w-auto\"\n              src=\"https://tailwindui.com/img/logos/workflow-mark-indigo-500.svg\"\n              alt=\"Workflow\"\n            />\n            <img\n              className=\"hidden lg:block h-8 w-auto\"\n              src=\"https://tailwindui.com/img/logos/workflow-logo-indigo-500-mark-white-text.svg\"\n              alt=\"Workflow\"\n            />\n          </div>\n          <div className=\"hidden sm:block sm:ml-6\">\n            <div className=\"flex space-x-4\">\n              {languages.map((language) => (\n                <Link\n                  to={`/${language.id}`}\n                  key={language.id}\n                  className=\"text-black dark:text-gray-300 hover:text-gray-500 dark:hover:text-white px-3 py-2 rounded-md text-sm font-medium\"\n                >\n                  {language.name}\n                </Link>\n              ))}\n            </div>\n          </div>\n        </div>\n        <div className=\"absolute inset-y-0 right-0 flex items-center pr-2 sm:static sm:inset-auto sm:ml-6 sm:pr-0\">\n          <DarkModeButton\n            isDarkMode={isDarkMode}\n            onDarkModeToggle={onDarkModeToggle}\n          />\n        </div>\n      </div>\n    </div>\n    <div className={`${isMenuOpen ? \"block\" : \"hidden\"} sm:hidden`}>\n      <div className=\"px-2 pt-2 pb-3 space-y-1\">\n        {languages.map((language) => (\n          <Link\n            to={`/${language.id}`}\n            key={language.id}\n            className=\"text-black dark:text-gray-300 hover:text-gray-500 dark:hover:text-white block px-3 py-2 rounded-md text-base font-medium\"\n          >\n            {language.name}\n          </Link>\n        ))}\n      </div>\n    </div>\n  </nav>\n);\n\nfunction mapStateToProps(state) {\n  return {\n    languages: state.languages,\n  };\n}\n\nexport const ConnectedNavigation = connect(mapStateToProps)(Navigation);\n","import { connect } from \"react-redux\";\nimport React from \"react\";\n\nconst Footer = () => (\n  <div className=\"bg-gray-200 dark:bg-gray-800 text-black dark:text-gray-300 rounded-md mt-6 p-6\">\n    Modokemdev @2020\n  </div>\n);\n\nexport const ConnectedFooter = connect((state) => state)(Footer);\n","import React, { Component } from \"react\";\nimport { BrowserRouter, Route } from \"react-router-dom\";\nimport { Provider } from \"react-redux\";\nimport { store } from \"./store\";\nimport { ConnectedDashboard } from \"./components/Dashboard\";\nimport { ConnectedNavigation } from \"./components/Navigation\";\nimport { ConnectedFooter } from \"./components/Footer\";\n\n// On page load or when changing themes, best to add inline in `head` to avoid FOUC\nif (\n  localStorage.theme === \"dark\" ||\n  (!(\"theme\" in localStorage) &&\n    window.matchMedia(\"(prefers-color-scheme: dark)\").matches)\n) {\n  document.querySelector(\"html\").classList.add(\"dark\");\n} else {\n  document.querySelector(\"html\").classList.remove(\"dark\");\n}\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      isDarkMode: document.querySelector(\"html\").classList.contains(\"dark\"),\n      isMenuOpen: false,\n    };\n    // Binding method\n    this.onDarkModeToggle = this.onDarkModeToggle.bind(this);\n    this.onMobileMenuClick = this.onMobileMenuClick.bind(this);\n  }\n\n  onMobileMenuClick() {\n    this.setState({\n      isMenuOpen: !this.state.isMenuOpen,\n    });\n  }\n\n  onDarkModeToggle() {\n    if (document.querySelector(\"html\").classList.contains(\"dark\")) {\n      document.querySelector(\"html\").classList.remove(\"dark\");\n    } else {\n      document.querySelector(\"html\").classList.add(\"dark\");\n    }\n    this.setDarkMode();\n  }\n\n  setDarkMode() {\n    this.setState({\n      isDarkMode: document.querySelector(\"html\").classList.contains(\"dark\"),\n    });\n  }\n\n  render() {\n    return (\n      <div className=\"bg-white dark:bg-black\">\n        <div className=\"px-4 py-3\">\n          <BrowserRouter>\n            <Provider store={store}>\n              <header>\n                <ConnectedNavigation\n                  isDarkMode={this.state.isDarkMode}\n                  onDarkModeToggle={this.onDarkModeToggle}\n                  isMenuOpen={this.state.isMenuOpen}\n                  onMobileMenuClick={this.onMobileMenuClick}\n                />\n              </header>\n              <main>\n                <Route exact path={`/`} render={() => <ConnectedDashboard />} />\n                <Route\n                  exact\n                  path={`/:id`}\n                  render={({ match }) => <ConnectedDashboard match={match} />}\n                />\n              </main>\n              <ConnectedFooter />\n            </Provider>\n          </BrowserRouter>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}