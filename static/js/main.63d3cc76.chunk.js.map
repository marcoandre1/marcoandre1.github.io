{"version":3,"sources":["logo.svg","images/profile.png","server/defaultState.js","store/index.js","App.js","serviceWorker.js","index.js"],"names":["defaultState","users","id","name","groups","owner","tasks","group","isComplete","comments","task","content","store","createStore","state","console","log","getState","App","className","src","logo","alt","profile","Component","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"mRAAe,MAA0B,iCCA1B,MAA0B,oC,eCA5BA,EAAe,CACxBC,MAAM,CAAC,CACHC,GAAG,KACHC,KAAK,OACP,CACED,GAAG,KACHC,KAAK,YAETC,OAAO,CAAC,CACJD,KAAK,QACLD,GAAG,KACHG,MAAM,MACR,CACEF,KAAK,QACLD,GAAG,KACHG,MAAM,MACR,CACEF,KAAK,OACLD,GAAG,KACHG,MAAM,OAGVC,MAAM,CAAC,CACHH,KAAK,iBACLD,GAAG,KACHK,MAAM,KACNF,MAAM,KACNG,YAAW,GACb,CACEL,KAAK,gBACLD,GAAG,KACHK,MAAM,KACNF,MAAM,KACNG,YAAW,GACb,CACEL,KAAK,cACLD,GAAG,KACHK,MAAM,KACNF,MAAM,KACNG,YAAW,GACb,CACEL,KAAK,6BACLD,GAAG,KACHK,MAAM,KACNF,MAAM,KACNG,YAAW,GACb,CACEL,KAAK,2BACLD,GAAG,KACHK,MAAM,KACNF,MAAM,KACNG,YAAW,IAEfC,SAAS,CAAC,CACNJ,MAAM,KACNH,GAAG,KACHQ,KAAK,KACLC,QAAQ,iBCtDHC,EAAQC,aACjB,WAAiD,IAA/BC,EAA8B,uDAAtBd,EACtB,OAAOc,KCCfC,QAAQC,IAAIJ,EAAMK,Y,IA4CHC,E,uKAxCX,OACE,yBAAKC,UAAU,OACb,4BAAQA,UAAU,cAChB,yBAAKC,IAAKC,EAAMF,UAAU,WAAWG,IAAI,SACzC,uBAAGH,UAAU,gBAAb,sEAGA,2EACA,6DAEF,yBAAKA,UAAU,uBACb,yBAAKA,UAAU,+EACb,yBAAKA,UAAU,SAASC,IAAKG,EAASD,IAAI,YAC1C,yBAAKH,UAAU,aACb,yBAAKA,UAAU,0BAAf,WACA,uBAAGA,UAAU,2BAAb,gDAIF,yBAAKA,UAAU,kBACb,0BAAMA,UAAU,yHAAhB,gBAGA,0BAAMA,UAAU,yHAAhB,WAGA,0BAAMA,UAAU,yHAAhB,WAGA,yBAAKA,UAAU,sCACb,4BAAQA,UAAU,YAAlB,sB,GAhCEK,aCIEC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCXNC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SD0H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,kB","file":"static/js/main.63d3cc76.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.2d27ead7.svg\";","export default __webpack_public_path__ + \"static/media/profile.c8178ecc.png\";","export const defaultState = {\r\n    users:[{\r\n        id:\"U1\",\r\n        name:\"Dev\"\r\n    },{\r\n        id:\"U2\",\r\n        name:\"C. Eeyo\"\r\n    }],\r\n    groups:[{\r\n        name:\"To Do\",\r\n        id:\"G1\",\r\n        owner:\"U1\"\r\n    },{\r\n        name:\"Doing\",\r\n        id:\"G2\",\r\n        owner:\"U1\"\r\n    },{\r\n        name:\"Done\",\r\n        id:\"G3\",\r\n        owner:\"U1\"\r\n    }\r\n    ],\r\n    tasks:[{\r\n        name:\"Refactor tests\",\r\n        id:\"T1\",\r\n        group:\"G1\",\r\n        owner:\"U1\",\r\n        isComplete:false,\r\n    },{\r\n        name:\"Meet with CTO\",\r\n        id:\"T2\",\r\n        group:\"G1\",\r\n        owner:\"U1\",\r\n        isComplete:true,\r\n    },{\r\n        name:\"Compile ES6\",\r\n        id:\"T3\",\r\n        group:\"G2\",\r\n        owner:\"U2\",\r\n        isComplete:false,\r\n    },{\r\n        name:\"Update component snapshots\",\r\n        id:\"T4\",\r\n        group:\"G2\",\r\n        owner:\"U1\",\r\n        isComplete:true,\r\n    },{\r\n        name:\"Production optimizations\",\r\n        id:\"T5\",\r\n        group:\"G3\",\r\n        owner:\"U1\",\r\n        isComplete:false,\r\n    }],\r\n    comments:[{\r\n        owner:\"U1\",\r\n        id:\"C1\",\r\n        task:\"T1\",\r\n        content:\"Great work!\"\r\n    }]\r\n};","import { createStore } from 'redux';\r\nimport { defaultState } from '../server/defaultState';\r\n\r\nexport const store = createStore(\r\n    function reducer (state = defaultState, action) {\r\n        return state;\r\n    }\r\n);","import React, { Component } from \"react\";\r\nimport logo from \"./logo.svg\";\r\nimport profile from \"./images/profile.png\";\r\nimport \"./App.css\";\r\nimport { store } from \"./store\";\r\n\r\nconsole.log(store.getState());\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"App\">\r\n        <header className=\"App-header\">\r\n          <img src={logo} className=\"App-logo\" alt=\"logo\" />\r\n          <p className=\"text-red-500\">\r\n            Hello! My name is Marco E (aka modokem, modokemdev, meltinglight).\r\n          </p>\r\n          <p>This personal website is under construction.</p>\r\n          <p>2020 update! (One more time!)</p>\r\n        </header>\r\n        <div className=\"flex justify-center\">\r\n          <div className=\"component-highlight max-w-sm rounded overflow-hidden shadow-lg items-center\">\r\n            <img className=\"w-full\" src={profile} alt=\"Profile\" />\r\n            <div className=\"px-6 py-4\">\r\n              <div className=\"font-bold text-xl mb-2\">Marco E</div>\r\n              <p className=\"text-gray-700 text-base\">\r\n                C# developer at day, Dragon Rider at night.\r\n              </p>\r\n            </div>\r\n            <div className=\"px-6 pt-4 pb-2\">\r\n              <span className=\"component-sub-highlight inline-block bg-gray-200 rounded-full px-3 py-1 text-sm font-semibold text-gray-700 mr-2 mb-2\">\r\n                #photography\r\n              </span>\r\n              <span className=\"component-sub-highlight inline-block bg-gray-200 rounded-full px-3 py-1 text-sm font-semibold text-gray-700 mr-2 mb-2\">\r\n                #travel\r\n              </span>\r\n              <span className=\"component-sub-highlight inline-block bg-gray-200 rounded-full px-3 py-1 text-sm font-semibold text-gray-700 mr-2 mb-2\">\r\n                #winter\r\n              </span>\r\n              <div className=\"px-6 py-4 component-sub-highlight \">\r\n                <button className=\"btn-blue\">Subscribe</button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./global.css\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}